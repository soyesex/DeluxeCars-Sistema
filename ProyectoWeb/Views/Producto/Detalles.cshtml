@model Aplicacion.Application.ViewModels.ProductoViewModel
@{
    ViewData["Title"] = Model.Nombre;
}

<div class="container my-5 pt-5">
    <div class="row">
        <div class="col-lg-6" data-aos="fade-right">
            <div class="product-image-gallery">
                <img src="@Model.ImagenUrl" alt="@Model.Nombre" class="main-image shadow-lg" onerror="this.onerror=null;this.src='/images/placeholder.png';">
            </div>
        </div>

        <div class="col-lg-6" data-aos="fade-left" data-aos-delay="100">
            <div class="product-details-panel">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Inicio</a></li>
                        <li class="breadcrumb-item"><a asp-controller="Catalogo" asp-action="Index">Catálogo</a></li>
                        <li class="breadcrumb-item active" aria-current="page">@Model.Nombre</li>
                    </ol>
                </nav>

                <h1 class="product-title-detail display-5">@Model.Nombre</h1>
                <p class="product-oem-detail">OEM: @Model.OriginalEquipmentManufacture</p>

                <p class="product-price-detail">@Model.Precio.ToString("C0")</p>

                @if (Model.Stock > 0)
                {
                    <p class="stock-status-detail available"><i class="bi bi-check-circle-fill"></i> En Stock</p>
                }
                else
                {
                    <p class="stock-status-detail unavailable"><i class="bi bi-x-circle-fill"></i> Agotado</p>
                }

                <p class="product-description-detail">@Model.Descripcion</p>

                <form id="form-add-to-cart" data-product-id="@Model.Id" class="purchase-form mt-4">
                    @Html.AntiForgeryToken() <div class="row align-items-center">
                        <div class="col-md-4">
                            <label for="quantity" class="form-label">Cantidad:</label>
                            <input type="number" id="quantity" class="form-control quantity-input" value="1" min="1" max="@Model.Stock">
                        </div>
                        <div class="col-md-8">
                            <button type="submit" class="btn btn-brand-accent btn-lg w-100 mt-3 mt-md-0">
                                <i class="bi bi-cart-plus-fill me-2"></i>Agregar al Carrito
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- 🔔 Notificación emergente personalizada -->
<div id="notificacion" class="notificacion-oculta"></div>

@section Scripts {
    <script>
        function mostrarNotificacion(mensaje, esError = false) {
            const noti = document.getElementById("notificacion");
            noti.innerText = mensaje;
            noti.classList.add("mostrar");
            if (esError) {
                noti.style.backgroundColor = "#c0392b"; // rojo para error
            } else {
                noti.style.backgroundColor = "#1f2937"; // gris oscuro para éxito
            }

            setTimeout(() => {
                noti.classList.remove("mostrar");
            }, 3000);
        }

        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('form-add-to-cart');

            if (form) {
                form.addEventListener('submit', function (event) {
                    event.preventDefault();

                    const productoId = form.dataset.productId;
                    const cantidad = document.getElementById('quantity').value;
                    const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                    const formData = new FormData();
                    formData.append('productoId', productoId);
                    formData.append('cantidad', cantidad);

                    fetch('/Carrito/AddToCart', {
                        method: 'POST',
                        headers: {
                            'RequestVerificationToken': token
                        },
                        body: formData
                    })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Respuesta del servidor no fue OK: ' + response.status);
                            }
                            return response.json();
                        })
                        .then(result => {
                            if (result.success) {
                                mostrarNotificacion(result.message); // ✅ Notificación bonita
                                const cartCountElement = document.getElementById('cart-item-count');
                                if (cartCountElement) {
                                    cartCountElement.textContent = result.itemCount;
                                }
                            } else {
                                mostrarNotificacion('Error: ' + result.message, true);
                            }
                        })
                        .catch(error => {
                            console.error('Error al añadir al carrito:', error);
                            mostrarNotificacion('Hubo un problema de comunicación con el servidor.', true);
                        });
                });
            }
        });
    </script>
}

<style>
    /* =======================================================
   ESTILOS PARA PÁGINA DE DETALLES DE PRODUCTO
   ======================================================= */
.product-image-gallery .main-image {
    width: 100%;
    border-radius: 12px;
    border: 1px solid var(--color-borde-claro);
}

.product-details-panel {
    padding-left: 2rem;
}

.breadcrumb {
    font-size: 0.9rem;
}

.breadcrumb-item a {
    color: var(--color-acento-principal);
    text-decoration: none;
}

.product-title-detail {
    font-weight: 700;
    color: var(--color-texto-sobre-claro);
}

.product-oem-detail {
    font-size: 0.9rem;
    color: var(--color-texto-suave);
    text-transform: uppercase;
    margin-top: -0.5rem;
}

.product-price-detail {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--color-acento-principal);
    margin: 1.5rem 0;
}

.stock-status-detail {
    font-weight: 600;
    display: flex;
    align-items: center;
}
.stock-status-detail.available { color: #1a9e3a; }
.stock-status-detail.unavailable { color: var(--color-enfasis-alerta); }
.stock-status-detail i { margin-right: 0.5rem; }

.product-description-detail {
    color: var(--color-texto-suave);
    line-height: 1.7;
    margin-top: 1.5rem;
}

.purchase-form {
    background-color: #f8f9fa;
    padding: 1.5rem;
    border-radius: 8px;
    margin-top: 2rem !important;
}

.quantity-input {
    text-align: center;
    font-weight: 600;
}

    #notificacion {
        position: fixed;
        top: 20px;
        right: 20px;
        background-color: #1f2937;
        color: white;
        padding: 15px 25px;
        border-radius: 8px;
        box-shadow: 0px 4px 10px rgba(0,0,0,0.3);
        font-weight: 500;
        z-index: 9999;
        opacity: 0;
        transform: translateY(-20px);
        transition: all 0.3s ease-in-out;
        pointer-events: none; /* ✅ permite hacer clic a través del div */
    }


        #notificacion.mostrar {
            opacity: 1;
            transform: translateY(0);
        }


</style>