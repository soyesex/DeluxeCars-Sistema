<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="ElegantGhostButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignOutlinedButton}">
        <Setter Property="Foreground" Value="DarkGray"/>
        <Setter Property="FontFamily" Value="{DynamicResource Font.SourceSans3}" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0.8"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="17"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>

                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PrimaryActionButtonStyle"
       TargetType="Button"
       BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Background" Value="{StaticResource Brush.Aggressive.DeepBlue}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp2"/>

        <Setter Property="Template">
            <Setter.Value>
                <!-- Aquí va el ControlTemplate completo -->
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                Background="{TemplateBinding Background}"
                CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#345A9B"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#2D4F88"/>
                            <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <!-- Animación inicial para los titulos -->
    <Style x:Key="ProfessionalFadeInStyle" TargetType="FrameworkElement">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                        Storyboard.TargetProperty="Opacity"
                        From="0" To="1" Duration="0:0:0.7">
                            <DoubleAnimation.EasingFunction>
                                <QuinticEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>

                        <DoubleAnimation
                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                        From="20" To="0" Duration="0:0:0.7">
                            <DoubleAnimation.EasingFunction>
                                <QuinticEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>

        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform Y="0"/>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ProfessionalFadeInStyle_Delayed" TargetType="FrameworkElement">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard BeginTime="0:0:0.1">
                        <DoubleAnimation 
                        Storyboard.TargetProperty="Opacity" 
                        From="0" To="1" Duration="0:0:0.7">
                            <DoubleAnimation.EasingFunction>
                                <QuinticEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation 
                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" 
                        From="20" To="0" Duration="0:0:0.7">
                            <DoubleAnimation.EasingFunction>
                                <QuinticEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform Y="0"/>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>