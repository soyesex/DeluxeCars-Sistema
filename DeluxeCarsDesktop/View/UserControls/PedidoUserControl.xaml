<UserControl x:Class="DeluxeCarsDesktop.View.UserControls.PedidoUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DeluxeCarsDesktop.View.UserControls"
             mc:Ignorable="d" 
              xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:models="clr-namespace:DeluxeCarsEntities;assembly=DeluxeCarsEntities"
             d:DesignHeight="550" d:DesignWidth="900">

    <UserControl.Resources>
        
        <ContextMenu x:Key="RowContextMenu">
            <MenuItem Header="Ver/Editar Pedido"
          Tag="{x:Static fa:IconChar.Pencil}"
          Style="{StaticResource ContextMenuIconItemStyle}"
          Command="{Binding DataContext.VerDetallesCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
          CommandParameter="{Binding}"/>

            <MenuItem Header="Recepcionar Mercancía"
          Tag="{x:Static fa:IconChar.BoxesPacking}"
          Style="{StaticResource ContextMenuIconItemStyle}"
          Command="{Binding DataContext.RecepcionarPedidoCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
          CommandParameter="{Binding}"/>

            <MenuItem Header="Registrar Pago a Proveedor"
          Tag="{x:Static fa:IconChar.MoneyBillWave}"
          Style="{StaticResource ContextMenuIconItemStyle}"
          Command="{Binding DataContext.RegistrarPagoCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
          CommandParameter="{Binding}"/>

            <MenuItem Header="Generar PDF del Pedido"
          Tag="{x:Static fa:IconChar.FilePdf}"
          Style="{StaticResource ContextMenuIconItemStyle}"
          Command="{Binding DataContext.GenerarPdfCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
          CommandParameter="{Binding}"/>

            <MenuItem Header="Aprobar Pedido"
          Tag="{x:Static fa:IconChar.CheckCircle}"
          Command="{Binding DataContext.AprobarPedidoCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
          CommandParameter="{Binding}">

                <MenuItem.Style>
                    <Style TargetType="MenuItem" BasedOn="{StaticResource ContextMenuIconItemStyle}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Estado}" Value="{x:Static models:EstadoPedido.Borrador}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
        </ContextMenu>

        <Style x:Key="WhiteHeaderStyle" TargetType="DataGridColumnHeader" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
            <Setter Property="Foreground" Value="{DynamicResource Text.Secondary}" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="FontFamily" Value="{DynamicResource Font.Poppins}" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>

        <Style x:Key="CustomDataGridCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource MaterialDesignDataGridCell}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="Background" Value="{DynamicResource Brush.Brand.CharcoalDark}"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="{DynamicResource Brush.Crema.MarfilClaro}" />
            <Setter Property="FontFamily" Value="{DynamicResource Font.Poppins}" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource Brush.Menu.OrangePastel}"/>
                    <Setter Property="Foreground" Value="{DynamicResource Brush.Brand.CharcoalDark}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    <!--<Grid Margin="15">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="0,15,0,15">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Horizontal">
                <Label Content="Desde:" VerticalAlignment="Center" Style="{StaticResource DarkLableForm}"/>
                <DatePicker SelectedDate="{Binding FechaInicio}" Style="{StaticResource DarkDatePickerStyle}" Width="140" Margin="5,0,0,0"/>

                <Label Content="Hasta:" VerticalAlignment="Center" Margin="15,0,0,0" Style="{StaticResource DarkLableForm}"/>
                <DatePicker SelectedDate="{Binding FechaFin}" Style="{StaticResource  DarkDatePickerStyle}" Width="140" Margin="5,0,0,0"/>


                <ComboBox ItemsSource="{Binding Proveedores}"
                          SelectedItem="{Binding ProveedorFiltro}"
                          DisplayMemberPath="RazonSocial"
                          Style="{DynamicResource MaterialDesignComboBox}"
                            Foreground="{StaticResource Text.Secondary}"
                            FontFamily="{StaticResource Font.SourceSans3}"
                            FontWeight="Medium"
                            FontSize="16"
                            BorderBrush="{DynamicResource Background.Disabled}"
                            materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource Brush.Menu.BlueCornflower}"
                          Width="250" Margin="75,0,0,0"/>

                <Button Command="{Binding FiltrarCommand}"
                        Margin="50 0"
                        Style="{StaticResource controlButton}"
                        Tag="{StaticResource color4}"
                        ToolTip="Limpiar Filtros">

                    <fa:IconImage Icon="Eraser" Width="15" Height="15" Style="{StaticResource controlButtonIcon}"/>

                </Button>

            </StackPanel>
        </Grid>

        <StackPanel Orientation="Horizontal" Margin="20" HorizontalAlignment="Right" Grid.Row="1">

            <Button Content="Nuevo Pedido" Command="{Binding NuevoPedidoCommand}"
                    Style="{StaticResource ElegantShadowGhostButton}"
                    Tag="{StaticResource Brush.Menu.GreenForest}"
                    Margin="0,0,0,0"/>

            <Label Content="Estado:" VerticalAlignment="Center" Margin="55,0,0,0"
                       FontSize="16" FontWeight="Medium"
                      Foreground="{StaticResource Text.Secondary}" FontFamily="{StaticResource Font.SourceSans3}"/>  
            
            <ComboBox ItemsSource="{Binding EstadosFiltro}"
                      SelectedItem="{Binding EstadoFiltroSeleccionado}"
                      Style="{DynamicResource MaterialDesignComboBox}"
                      Foreground="{StaticResource Text.Secondary}"
                      FontFamily="{StaticResource Font.SourceSans3}"
                      FontWeight="Medium"
                      FontSize="16"
                      BorderBrush="{DynamicResource Background.Disabled}"
                      materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource Brush.Menu.BlueCornflower}"
                      Width="150" Margin="5,0,50,0">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

        </StackPanel>

        <Grid Grid.Row="2" Margin="0 0 0 30">
            <Border  CornerRadius="10" Background="{StaticResource PrimaryBackgroundColor}" 
        BorderBrush="{StaticResource PrimaryBorderColor}" BorderThickness="1.2">
                <DataGrid ItemsSource="{Binding Pedidos}"
              SelectedItem="{Binding PedidoSeleccionado}"
              Style="{StaticResource AppDataGridStyle}"
              CanUserAddRows="False" AutoGenerateColumns="False" IsReadOnly="True"
              ScrollViewer.HorizontalScrollBarVisibility="Auto">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="N° Pedido" Binding="{Binding NumeroPedido}" Width="140"/>

                        <DataGridTemplateColumn Header="Estado" Width="Auto" MinWidth="100">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border CornerRadius="4" Padding="8,3" Margin="2">
                                        <TextBlock Text="{Binding Estado}" FontWeight="Bold" HorizontalAlignment="Center"/>
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Estado}" Value="{x:Static models:EstadoPedido.Borrador}">
                                                        <Setter Property="Background" Value="#6B7280"/>
                                                        <Setter Property="ToolTip" Value="Este pedido es un borrador y aún puede ser editado."/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Estado}" Value="{x:Static models:EstadoPedido.Aprobado}">
                                                        <Setter Property="Background" Value="#10B981"/>
                                                        <Setter Property="ToolTip" Value="El pedido ha sido aprobado. Pendiente de recepción."/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Estado}" Value="{x:Static models:EstadoPedido.Recibido}">
                                                        <Setter Property="Background" Value="#059669"/>
                                                        <Setter Property="ToolTip" Value="El pedido ha sido completado y la mercancía recibida."/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Estado}" Value="{x:Static models:EstadoPedido.Cancelado}">
                                                        <Setter Property="Background" Value="#374151"/>
                                                        <Setter Property="ToolTip" Value="Este pedido ha sido cancelado."/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn Header="Fecha Emisión" Binding="{Binding FechaEmision, StringFormat=d}" Width="Auto"/>

                        <DataGridTextColumn Header="Proveedor" Binding="{Binding Proveedor.RazonSocial}" Width="*"/>

                        <DataGridTextColumn Header="Monto Total" Binding="{Binding MontoTotal, StringFormat=C}" Width="Auto" FontWeight="Bold"/>
                        <DataGridTextColumn Header="Saldo Pendiente" Binding="{Binding SaldoPendiente, StringFormat=C}" Width="Auto"/>

                        <DataGridTemplateColumn Header="Estado Pago" Width="Auto" MinWidth="120">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border CornerRadius="4" Padding="8,3" Margin="2" MinWidth="70">
                                        <TextBlock Text="{Binding EstadoPago}" FontWeight="Bold" HorizontalAlignment="Center"/>
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding EstadoPago}" Value="{x:Static models:EstadoPagoPedido.Pendiente}">
                                                        <Setter Property="Background" Value="#EF4444"/>
                                                        <Setter Property="ToolTip" Value="Este pedido está pendiente de pago."/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding EstadoPago}" Value="{x:Static models:EstadoPagoPedido.PagadoParcialmente}">
                                                        <Setter Property="Background" Value="#F59E0B"/>
                                                        <Setter Property="ToolTip" Value="Se han realizado abonos a este pedido."/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding EstadoPago}" Value="{x:Static models:EstadoPagoPedido.Pagado}">
                                                        <Setter Property="Background" Value="#10B981"/>
                                                        <Setter Property="ToolTip" Value="Este pedido ha sido pagado en su totalidad."/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Acciones" Width="280">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                        <Button Style="{StaticResource DataGridIconSharpButton_Style}"
                                    Tag="{x:Static fa:IconChar.Eye}"
                                    ToolTip="Ver Detalles"
                                    Command="{Binding DataContext.VerDetallesCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                    CommandParameter="{Binding}"/>

                                        <Button Style="{StaticResource DataGridIconSharpButton_Style}"
                                    Tag="{x:Static fa:IconChar.Inbox}"
                                    ToolTip="Recepcionar Pedido"
                                    Command="{Binding DataContext.RecepcionarPedidoCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                    CommandParameter="{Binding}"/>

                                        <Button Style="{StaticResource DataGridIconSharpButton_Style}"
                                    Tag="{x:Static fa:IconChar.MoneyBillWave}"
                                    ToolTip="Registrar Pago"
                                    Command="{Binding DataContext.RegistrarPagoCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                    CommandParameter="{Binding}"/>

                                        <Button Style="{StaticResource DataGridIconSharpButton_Style}"
                                    Tag="{x:Static fa:IconChar.FilePdf}"
                                    ToolTip="Generar PDF"
                                    Command="{Binding DataContext.GenerarPdfCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                    CommandParameter="{Binding}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                    </DataGrid.Columns>
                </DataGrid>
            </Border>
        </Grid>
        
    </Grid>
</UserControl>-->

    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/> 
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="0,10,0,30" HorizontalAlignment="Left">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" HorizontalAlignment="Right" Orientation="Horizontal">

                <TextBox Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource SearchBoxStyle}" 
                        MinWidth="200" Width="790" Tag="Buscar por N° Pedido..."/>
            </StackPanel>


        </Grid>


        <Grid Grid.Row="1" HorizontalAlignment="Center" Margin="0 0 0 30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            

            <ComboBox Grid.Column="1" ItemsSource="{Binding Proveedores}"
                    SelectedItem="{Binding ProveedorFiltro}"
                    DisplayMemberPath="RazonSocial"
                    Style="{StaticResource ElegantComboBoxStyle}"
                    FontFamily="{StaticResource Font.Poppins}"
                    Tag="{StaticResource Border.Default}"
                      Margin="35 0 30 0"/>

            <ComboBox Grid.Column="2" ItemsSource="{Binding EstadosFiltro}"
                      SelectedItem="{Binding EstadoFiltroSeleccionado}"
                      DisplayMemberPath="DisplayName" 
                      Style="{StaticResource ElegantComboBoxStyle}"
                      FontFamily="{StaticResource Font.Poppins}"
                      Tag="{StaticResource Border.Default}"/>

            <Button Grid.Column="3" Command="{Binding LimpiarFiltrosCommand}"
                    Margin="20 0 0 0"
                    Style="{StaticResource controlButton}"
                    Tag="{StaticResource color4}"
                    ToolTip="Limpiar Filtros">

                <fa:IconImage Icon="Trash" Width="20" Height="20" Style="{StaticResource controlButtonIcon}"/>

            </Button>

            <Button Grid.Column="4" Width="150" Content="Nuevo Pedido" 
            Command="{Binding NuevoPedidoCommand}"
            Style="{StaticResource ElegantShadowGhostButton}"
            Margin="100 0 60 0"
            Tag="{StaticResource Brush.Menu.GreenForest}"/>

        </Grid>

        <Border Grid.Row="2" CornerRadius="10" Padding="0 0 0 7" Background="{StaticResource Brush.Brand.CharcoalLight}" BorderBrush="{StaticResource PrimaryBorderColor}" BorderThickness="1.2">
            <DataGrid ItemsSource="{Binding Pedidos}"
                    SelectedItem="{Binding PedidoSeleccionado}"
                    Style="{StaticResource AppDataGridStyle}"
          HorizontalGridLinesBrush="Transparent"
          VerticalGridLinesBrush="Transparent"
                      HeadersVisibility="Column"
                      GridLinesVisibility="None"   Padding="0"
                    CellStyle="{StaticResource CustomDataGridCellStyle}"
                    ColumnHeaderStyle="{StaticResource WhiteHeaderStyle}" 
                      ScrollViewer.HorizontalScrollBarVisibility="Hidden">

                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                        <Setter Property="ContextMenu" Value="{StaticResource RowContextMenu}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>

                    
                    <DataGridTextColumn Header="N° Pedido" Binding="{Binding NumeroPedido}" Width="*"/>

                    <DataGridTemplateColumn Header="Estado Pedido" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border CornerRadius="12" Padding="10,4">
                                    <TextBlock Text="{Binding Estado}" FontFamily="{DynamicResource Font.Poppins}" FontSize="16" FontWeight="Regular" HorizontalAlignment="Center"/>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="Background" Value="#374151"/>
                                            <Setter Property="ToolTip" Value="Este pedido ha sido cancelado."/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Estado}" Value="{x:Static models:EstadoPedido.Borrador}">
                                                    <Setter Property="Background" Value="#6B7280"/>
                                                    <Setter Property="ToolTip" Value="Este pedido es un borrador y aún puede ser editado."/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Estado}" Value="{x:Static models:EstadoPedido.Aprobado}">
                                                    <Setter Property="Background" Value="#3B82F6"/>
                                                    <Setter Property="ToolTip" Value="El pedido ha sido aprobado. Pendiente de recepción."/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Estado}" Value="{x:Static models:EstadoPedido.RecibidoParcialmente}">
                                                    <Setter Property="Background" Value="#F59E0B"/>
                                                    <Setter Property="ToolTip" Value="Se ha recibido parte de la mercancía de este pedido."/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Estado}" Value="{x:Static models:EstadoPedido.Recibido}">
                                                    <Setter Property="Background" Value="#10B981"/>
                                                    <Setter Property="ToolTip" Value="El pedido ha sido completado y la mercancía recibida."/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>


                    <DataGridTextColumn Header="Fecha Emisión" Binding="{Binding FechaEmision, StringFormat='dd/MM/yyyy'}" Width="*"/>
                    <DataGridTextColumn Header="Proveedor" Binding="{Binding Proveedor.RazonSocial}" Width="*"/>
                    <DataGridTextColumn Header="Monto Total" Binding="{Binding MontoTotal, StringFormat=C}" Width="*" FontWeight="Bold"/>
                    <DataGridTextColumn Header="Saldo" Binding="{Binding SaldoPendiente, StringFormat=C}" Width="*"/>

                    <DataGridTemplateColumn Header="Estado Pago" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border CornerRadius="12" Padding="10,4" MinWidth="70">
                                    <TextBlock Text="{Binding EstadoPago}" FontFamily="{DynamicResource Font.Poppins}" FontSize="14" FontWeight="Regular" HorizontalAlignment="Center"/>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="Background" Value="#6B7280"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding EstadoPago}" Value="{x:Static models:EstadoPagoPedido.Pendiente}">
                                                    <Setter Property="Background" Value="#EF4444"/>
                                                    <Setter Property="ToolTip" Value="Este pedido está pendiente de pago."/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding EstadoPago}" Value="{x:Static models:EstadoPagoPedido.PagadoParcialmente}">
                                                    <Setter Property="Background" Value="#F59E0B"/>
                                                    <Setter Property="ToolTip" Value="Se han realizado abonos a este pedido."/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding EstadoPago}" Value="{x:Static models:EstadoPagoPedido.Pagado}">
                                                    <Setter Property="Background" Value="#10B981"/>
                                                    <Setter Property="ToolTip" Value="Este pedido ha sido pagado en su totalidad."/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Acciones" Width="120">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button ToolTip="Ver/Editar Pedido" Style="{StaticResource MaterialDesignToolButton}"
                                        Command="{Binding DataContext.VerDetallesCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                        CommandParameter="{Binding}">
                                        <fa:IconImage Icon="Pencil" Foreground="{DynamicResource Brush.Crema.MarfilClaro}" Style="{StaticResource controlButtonIcon}" Height="15" Width="15"/>
                                    </Button>
                                    <Button ToolTip="Recepcionar Mercancía" Style="{StaticResource MaterialDesignToolButton}"
                                        Command="{Binding DataContext.RecepcionarPedidoCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                        CommandParameter="{Binding}">
                                        <fa:IconImage Icon="BoxesPacking" Foreground="{DynamicResource Brush.Crema.MarfilClaro}" Style="{StaticResource controlButtonIcon}" Height="15" Width="15"/>
                                    </Button>
                                    <Button ToolTip="Registrar Pago a Proveedor" Style="{StaticResource MaterialDesignToolButton}"
                                        Command="{Binding DataContext.RegistrarPagoCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                        CommandParameter="{Binding}">
                                        <fa:IconImage Icon="MoneyBillWave" Foreground="{DynamicResource Brush.Crema.MarfilClaro}" Style="{StaticResource controlButtonIcon}" Height="15" Width="15"/>
                                    </Button>
                                    <Button ToolTip="Generar PDF del Pedido" Style="{StaticResource MaterialDesignToolButton}"
                                        Command="{Binding DataContext.GenerarPdfCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                        CommandParameter="{Binding}">
                                        <fa:IconImage Icon="FilePdf" Foreground="{DynamicResource Brush.Crema.MarfilClaro}" Style="{StaticResource controlButtonIcon}" Height="15" Width="15"/>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Border>

        <Grid Grid.Row="3" Margin="0,10,0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" Text="{Binding TotalItems, StringFormat='Total: {0} registros'}" 
     FontSize="15"
     FontFamily="{StaticResource Font.Poppins}" FontWeight="Medium"
     VerticalAlignment="Center" Margin="20,0,20,0"
     Foreground="{StaticResource Text.Secondary}"/>

            <StackPanel Grid.Column="2" Orientation="Horizontal">
                <Button Command="{Binding IrAPaginaAnteriorCommand}"  Style="{StaticResource MaterialDesignToolButton}">
                    <materialDesign:PackIcon Kind="ChevronLeft" Width="15" Height="15"/>
                </Button>

                <TextBlock VerticalAlignment="Center" FontSize="15" FontFamily="{StaticResource Font.Poppins}" FontWeight="Medium" Margin="10,0" Foreground="{StaticResource Text.Secondary}">
             <Run Text="Página"/>    
             <Run Text="{Binding NumeroDePagina}"/>
             <Run Text="de"/>
             <Run Text="{Binding TotalPaginas, Mode=OneWay}"/>
                </TextBlock>

                <Button Command="{Binding IrAPaginaSiguienteCommand}" Style="{StaticResource MaterialDesignToolButton}">
                    <materialDesign:PackIcon Kind="ChevronRight" />
                </Button>
            </StackPanel>

        </Grid>
    </Grid>
</UserControl>
